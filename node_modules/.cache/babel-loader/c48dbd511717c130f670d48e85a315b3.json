{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/new-suluhiso/suluhisho-webapp/src/Pages/Login/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Loginform } from '../../components';\nimport { setUserSession } from '../../api/User';\nimport { useState } from 'react'; // import {} from 'react-router-dom'\n\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const [errorMessage, setErrorMessage] = useState();\n  const [spinner, setSpinner] = useState(false);\n\n  const handleSubmit = async values => {\n    setSpinner(true);\n    const Response = await fetch(`http://127.0.0.1:5000/api/auth/login `, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(values)\n    });\n    const jsonData = await Response.json();\n    setSpinner(false);\n    console.log(jsonData);\n    console.log(spinner);\n\n    if (jsonData.message) {\n      setErrorMessage(jsonData.message);\n    }\n\n    if (jsonData.token) {\n      setUserSession(jsonData.token, jsonData);\n      navigate('/AddJob');\n      window.location.reload();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Loginform, {\n      error: errorMessage,\n      loading: spinner,\n      handleLogin: val => handleSubmit(val)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Login, \"PekoPZZjWSXYDyXEeLOWaQKsRVg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/mac/Desktop/new-suluhiso/suluhisho-webapp/src/Pages/Login/index.tsx"],"names":["Loginform","setUserSession","useState","useNavigate","Login","navigate","errorMessage","setErrorMessage","spinner","setSpinner","handleSubmit","values","Response","fetch","method","headers","body","JSON","stringify","jsonData","json","console","log","message","token","window","location","reload","val"],"mappings":";;;AACA,SAASA,SAAT,QAA0B,kBAA1B;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CACA;;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;;AACA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAMC,QAAQ,GAAGF,WAAW,EAA5B;AACA,QAAM,CAACG,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,EAAhD;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;;AACA,QAAMQ,YAAY,GAAG,MAAOC,MAAP,IAAgC;AACnDF,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAE,uCAAF,EAA0C;AACpEC,MAAAA,MAAM,EAAE,MAD4D;AAEpEC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAF2D;AAKpEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,MAAf;AAL8D,KAA1C,CAA5B;AAOA,UAAMQ,QAAQ,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAvB;AACAX,IAAAA,UAAU,CAAC,KAAD,CAAV;AAEAY,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYd,OAAZ;;AACA,QAAIW,QAAQ,CAACI,OAAb,EAAsB;AACpBhB,MAAAA,eAAe,CAACY,QAAQ,CAACI,OAAV,CAAf;AACD;;AACD,QAAIJ,QAAQ,CAACK,KAAb,EAAoB;AAClBvB,MAAAA,cAAc,CAACkB,QAAQ,CAACK,KAAV,EAAiBL,QAAjB,CAAd;AACAd,MAAAA,QAAQ,CAAC,SAAD,CAAR;AACAoB,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD;AACF,GAtBD;;AAuBA,sBACE;AAAA,2BACE,QAAC,SAAD;AACE,MAAA,KAAK,EAAErB,YADT;AAEE,MAAA,OAAO,EAAEE,OAFX;AAGE,MAAA,WAAW,EAAGoB,GAAD,IAAclB,YAAY,CAACkB,GAAD;AAHzC;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AASD,CApCD;;GAAMxB,K;UACaD,W;;;KADbC,K;AAqCN,eAAeA,KAAf","sourcesContent":["import { FormikValues } from 'formik'\nimport { Loginform } from '../../components'\nimport { setUserSession } from '../../api/User'\nimport { useState } from 'react'\n// import {} from 'react-router-dom'\nimport { useNavigate } from 'react-router-dom'\nconst Login = () => {\n  const navigate = useNavigate()\n  const [errorMessage, setErrorMessage] = useState()\n  const [spinner, setSpinner] = useState(false)\n  const handleSubmit = async (values: FormikValues) => {\n    setSpinner(true)\n    const Response = await fetch(`http://127.0.0.1:5000/api/auth/login `, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(values),\n    })\n    const jsonData = await Response.json()\n    setSpinner(false)\n\n    console.log(jsonData)\n    console.log(spinner)\n    if (jsonData.message) {\n      setErrorMessage(jsonData.message)\n    }\n    if (jsonData.token) {\n      setUserSession(jsonData.token, jsonData)\n      navigate('/AddJob')\n      window.location.reload()\n    }\n  }\n  return (\n    <>\n      <Loginform\n        error={errorMessage}\n        loading={spinner}\n        handleLogin={(val: any) => handleSubmit(val)}\n      />\n    </>\n  )\n}\nexport default Login\n"]},"metadata":{},"sourceType":"module"}