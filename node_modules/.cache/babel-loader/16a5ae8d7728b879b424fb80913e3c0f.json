{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/new-suluhiso/suluhisho-webapp/src/Pages/Home/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Hero, JobCard, Notification } from \"../../components\";\nimport { useEffect, useState } from \"react\";\nimport { getToken, getUser } from \"../../api/User\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [userInfo, setUserInfos] = useState();\n  const token = getToken();\n  const user = getUser();\n  const [jobs, setJobs] = useState();\n  const [isLogedin, setIsloggedin] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [statusMessage, setStatusMessage] = useState(\"\");\n  const [status, setStatus] = useState();\n  useEffect(() => {\n    setLoading(true);\n    axios.get(`${process.env.BASE_URL}/api/offre?page=1&limit=3`).then(res => {\n      const offres = res.data;\n\n      if (offres.results) {\n        setLoading(false);\n        setJobs(offres === null || offres === void 0 ? void 0 : offres.results);\n      }\n    });\n  }, [token]);\n  useEffect(() => {\n    if (user) {\n      setUserInfos(user.userId);\n    }\n  }, [user]);\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setIsloggedin(false);\n  };\n\n  const handleAppy = offreId => {\n    if (userInfo) {\n      setIsloggedin(true);\n      setStatusMessage(\"Vous avez postulé avec succès à ce poste\");\n      setStatus(\"success\");\n    } else {\n      setIsloggedin(true);\n      setStatus(\"error\");\n      setStatusMessage(\"Vous devez vous connecter pour postuler\");\n    }\n\n    console.log(\"OffereId\", offreId);\n    console.log(\"userId\", userInfo);\n    setIsloggedin(true);\n  };\n\n  console.log(jobs);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Hero, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center \",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-20 h-20 border-b-4 border-indigo-600 rounded-full animate-spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(JobCard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      isError: isLogedin,\n      handleClose: handleClose,\n      status: status,\n      message: statusMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Home, \"6d6OqK6uhDI0a3SaK47lsAQIGNM=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/mac/Desktop/new-suluhiso/suluhisho-webapp/src/Pages/Home/index.tsx"],"names":["Hero","JobCard","Notification","useEffect","useState","getToken","getUser","axios","Home","userInfo","setUserInfos","token","user","jobs","setJobs","isLogedin","setIsloggedin","loading","setLoading","statusMessage","setStatusMessage","status","setStatus","get","process","env","BASE_URL","then","res","offres","data","results","userId","handleClose","event","reason","handleAppy","offreId","console","log"],"mappings":"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","sourcesContent":["import { Hero, JobCard, Notification } from \"../../components\";\nimport { useEffect, useState } from \"react\";\nimport { getToken, getUser } from \"../../api/User\";\nimport axios from \"axios\";\nconst Home = () => {\n  const [userInfo, setUserInfos] = useState();\n  const token = getToken();\n  const user = getUser();\n  const [jobs, setJobs] = useState<any>();\n  const [isLogedin, setIsloggedin] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [statusMessage, setStatusMessage] = useState(\"\");\n  const [status, setStatus] = useState<any>();\n  useEffect(() => {\n    setLoading(true);\n    axios\n      .get(`${process.env.BASE_URL}/api/offre?page=1&limit=3`)\n      .then((res) => {\n        const offres = res.data;\n        if (offres.results) {\n          setLoading(false);\n          setJobs(offres?.results);\n        }\n      });\n  }, [token]);\n  useEffect(() => {\n    if (user) {\n      setUserInfos(user.userId);\n    }\n  }, [user]);\n  const handleClose = (\n    event?: React.SyntheticEvent | Event,\n    reason?: string\n  ) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setIsloggedin(false);\n  };\n\n  const handleAppy = (offreId: any) => {\n    if (userInfo) {\n      setIsloggedin(true);\n      setStatusMessage(\"Vous avez postulé avec succès à ce poste\");\n      setStatus(\"success\");\n    } else {\n      setIsloggedin(true);\n      setStatus(\"error\");\n      setStatusMessage(\"Vous devez vous connecter pour postuler\");\n    }\n    console.log(\"OffereId\", offreId);\n    console.log(\"userId\", userInfo);\n    setIsloggedin(true);\n  };\n  console.log(jobs);\n  return (\n    <>\n      <Hero />\n      {loading ? (\n        <div className=\"flex items-center justify-center \">\n          <div className=\"w-20 h-20 border-b-4 border-indigo-600 rounded-full animate-spin\"></div>\n        </div>\n      ) : (\n        <JobCard />\n      )}\n      <Notification\n        isError={isLogedin}\n        handleClose={handleClose}\n        status={status}\n        message={statusMessage}\n      />\n    </>\n  );\n};\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}