{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.recoilPersist = void 0;\n\nconst recoil_1 = require(\"recoil\");\n/**\n * Recoil module to persist state to storage\n *\n * @param config Optional configuration object\n * @param config.key Used as key in local storage, defaults to `recoil-persist`\n * @param config.storage Local storage to use, defaults to `localStorage`\n */\n\n\nconst recoilPersist = function () {\n  let config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  if (typeof window === 'undefined') {\n    return {\n      persistAtom: () => {}\n    };\n  }\n\n  const {\n    key = 'recoil-persist',\n    storage = localStorage\n  } = config;\n\n  const persistAtom = _ref => {\n    let {\n      onSet,\n      node,\n      trigger,\n      setSelf\n    } = _ref;\n\n    if (trigger === 'get') {\n      const state = getState();\n\n      if (typeof state.then === 'function') {\n        state.then(s => {\n          if (s.hasOwnProperty(node.key)) {\n            setSelf(s[node.key]);\n          }\n        });\n      }\n\n      if (state.hasOwnProperty(node.key)) {\n        setSelf(state[node.key]);\n      }\n    }\n\n    onSet(async newValue => {\n      const state = getState();\n\n      if (typeof state.then === 'function') {\n        state.then(s => updateState(newValue, s, node.key));\n      } else {\n        updateState(newValue, state, node.key);\n      }\n    });\n  };\n\n  const updateState = (newValue, state, key) => {\n    if (newValue !== null && newValue !== undefined && newValue instanceof recoil_1.DefaultValue && state.hasOwnProperty(key)) {\n      delete state[key];\n    } else {\n      state[key] = newValue;\n    }\n\n    setState(state);\n  };\n\n  const getState = () => {\n    const toParse = storage.getItem(key);\n\n    if (toParse === null || toParse === undefined) {\n      return {};\n    }\n\n    if (typeof toParse === 'string') {\n      return parseState(toParse);\n    }\n\n    if (typeof toParse.then === 'function') {\n      return toParse.then(parseState);\n    }\n\n    return {};\n  };\n\n  const parseState = state => {\n    if (state === undefined) {\n      return {};\n    }\n\n    try {\n      return JSON.parse(state);\n    } catch (e) {\n      console.error(e);\n      return {};\n    }\n  };\n\n  const setState = state => {\n    try {\n      if (typeof storage.mergeItem === 'function') {\n        storage.mergeItem(key, JSON.stringify(state));\n      } else {\n        storage.setItem(key, JSON.stringify(state));\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return {\n    persistAtom\n  };\n};\n\nexports.recoilPersist = recoilPersist;","map":{"version":3,"sources":["/Users/mac/Desktop/new-suluhiso/suluhisho-webapp/node_modules/recoil-persist/dist/index.js"],"names":["Object","defineProperty","exports","value","recoilPersist","recoil_1","require","config","window","persistAtom","key","storage","localStorage","onSet","node","trigger","setSelf","state","getState","then","s","hasOwnProperty","newValue","updateState","undefined","DefaultValue","setState","toParse","getItem","parseState","JSON","parse","e","console","error","mergeItem","stringify","setItem"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.recoilPersist = void 0;\nconst recoil_1 = require(\"recoil\");\n/**\n * Recoil module to persist state to storage\n *\n * @param config Optional configuration object\n * @param config.key Used as key in local storage, defaults to `recoil-persist`\n * @param config.storage Local storage to use, defaults to `localStorage`\n */\nconst recoilPersist = (config = {}) => {\n    if (typeof window === 'undefined') {\n        return {\n            persistAtom: () => { },\n        };\n    }\n    const { key = 'recoil-persist', storage = localStorage } = config;\n    const persistAtom = ({ onSet, node, trigger, setSelf }) => {\n        if (trigger === 'get') {\n            const state = getState();\n            if (typeof state.then === 'function') {\n                state.then((s) => {\n                    if (s.hasOwnProperty(node.key)) {\n                        setSelf(s[node.key]);\n                    }\n                });\n            }\n            if (state.hasOwnProperty(node.key)) {\n                setSelf(state[node.key]);\n            }\n        }\n        onSet(async (newValue) => {\n            const state = getState();\n            if (typeof state.then === 'function') {\n                state.then((s) => updateState(newValue, s, node.key));\n            }\n            else {\n                updateState(newValue, state, node.key);\n            }\n        });\n    };\n    const updateState = (newValue, state, key) => {\n        if (newValue !== null &&\n            newValue !== undefined &&\n            newValue instanceof recoil_1.DefaultValue &&\n            state.hasOwnProperty(key)) {\n            delete state[key];\n        }\n        else {\n            state[key] = newValue;\n        }\n        setState(state);\n    };\n    const getState = () => {\n        const toParse = storage.getItem(key);\n        if (toParse === null || toParse === undefined) {\n            return {};\n        }\n        if (typeof toParse === 'string') {\n            return parseState(toParse);\n        }\n        if (typeof toParse.then === 'function') {\n            return toParse.then(parseState);\n        }\n        return {};\n    };\n    const parseState = (state) => {\n        if (state === undefined) {\n            return {};\n        }\n        try {\n            return JSON.parse(state);\n        }\n        catch (e) {\n            console.error(e);\n            return {};\n        }\n    };\n    const setState = (state) => {\n        try {\n            if (typeof storage.mergeItem === 'function') {\n                storage.mergeItem(key, JSON.stringify(state));\n            }\n            else {\n                storage.setItem(key, JSON.stringify(state));\n            }\n        }\n        catch (e) {\n            console.error(e);\n        }\n    };\n    return { persistAtom };\n};\nexports.recoilPersist = recoilPersist;\n"]},"metadata":{},"sourceType":"script"}